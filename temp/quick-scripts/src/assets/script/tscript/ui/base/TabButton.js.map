{"version":3,"sources":["assets\\script\\tscript\\ui\\base\\TabButton.ts"],"names":[],"mappings":";;;;AAAA,oBAAoB;AACpB,iFAAiF;AACjF,yFAAyF;AACzF,mBAAmB;AACnB,2FAA2F;AAC3F,mGAAmG;AACnG,8BAA8B;AAC9B,2FAA2F;AAC3F,mGAAmG;;AAE7F,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAyB,CAAC;AAG1C;IAAuC,6BAAY;IADnD;QAGI,wBAAwB;QAH5B,qEAgDC;QAzCW,iBAAW,GAAW,IAAI,CAAC;QAG3B,mBAAa,GAAW,IAAI,CAAC;QAG7B,eAAS,GAAY,KAAK,CAAC;;QA4BnC;;WAEG;QAIH,iBAAiB;IACrB,CAAC;IAlCG,sBAAW,+BAAQ;aAAnB;YACI,OAAO,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;aACD,UAAoB,KAAc;YAE9B,IAAG,KAAK,EACR;gBACI,mCAAmC;gBACnC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,KAAK,CAAC;gBAChC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC;aAGpC;iBACD;gBACI,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC;gBAC/B,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,KAAK,CAAC;aACrC;YAED,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAC3B,CAAC;;;OAjBA;IAoBD,0BAAM,GAAN;QAEI,wBAAwB;IAC5B,CAAC;IAhCD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;kDACiB;IAGnC;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;oDACmB;IAGrC;QADC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC;gDACc;IAZlB,SAAS;QAD7B,OAAO;OACa,SAAS,CA+C7B;IAAD,gBAAC;CA/CD,AA+CC,CA/CsC,EAAE,CAAC,SAAS,GA+ClD;kBA/CoB,SAAS","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TabButton extends cc.Component {\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n\r\n    @property(cc.Node)\r\n    private normalFrame:cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    private selectedFrame:cc.Node = null;\r\n\r\n    @property(cc.Boolean)\r\n    private _selected: boolean = false;\r\n    public get selected(): boolean {\r\n        return this._selected;\r\n    }\r\n    public set selected(value: boolean) {\r\n\r\n        if(value)\r\n        {\r\n            //this.node.emit(\"mousedown\",this);\r\n            this.normalFrame.active = false;\r\n            this.selectedFrame.active = true;\r\n            \r\n           \r\n        }else\r\n        {\r\n            this.normalFrame.active = true;\r\n            this.selectedFrame.active = false;   \r\n        }\r\n\r\n        this._selected = value;\r\n    }\r\n\r\n\r\n    onLoad () \r\n    {\r\n        //this.selected = false;\r\n    }\r\n\r\n    /*start () {\r\n\r\n    }*/\r\n\r\n    \r\n\r\n    // update (dt) {}\r\n}\r\n"]}