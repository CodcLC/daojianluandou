{"version":3,"sources":["assets\\script\\tscript\\ui\\main\\LevelIcon.ts"],"names":[],"mappings":";;;;;AAAA,sDAAiD;AACjD,sDAAiD;AAGjD,oBAAoB;AACpB,kFAAkF;AAClF,yFAAyF;AACzF,mBAAmB;AACnB,4FAA4F;AAC5F,mGAAmG;AACnG,8BAA8B;AAC9B,4FAA4F;AAC5F,mGAAmG;AAE7F,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAyB,CAAC;AAG1C;IAAuC,6BAAY;IADnD;QAAA,qEAkEC;QA9DG,UAAI,GAAc,IAAI,CAAC;QAGvB,aAAO,GAAY,IAAI,CAAC;QAGxB,kBAAY,GAAc,EAAE,CAAC;;QAuD7B,iBAAiB;IACrB,CAAC;IArDG,wBAAwB;IAExB,eAAe;IAEf,yBAAK,GAAL;IAEA,CAAC;IAEM,oCAAgB,GAAvB;QAEI,IAAI,OAAO,GAAG,qBAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,qBAAW,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,CAAC;QACzF,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IAC7B,CAAC;IAEM,8BAAU,GAAjB,UAAkB,OAAc,EAAC,MAAqB;QAArB,uBAAA,EAAA,aAAqB;QAGlD,IAAI,YAAY,GAAmB,qBAAW,CAAC,QAAQ,CAAC,gBAAgB,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;QAEtF,IAAI,WAAW,GAAG,qBAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QACzE,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QACpC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC;QACnD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC;QAErD,IAAG,CAAC,MAAM,EACV;YACI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC;YAC5B,OAAO;SACV;QAED,IAAG,YAAY,CAAC,OAAO,IAAI,CAAC,EAC5B;YACI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC;SAC/B;aACD;YACI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;YAE3B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAG,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EACjD;gBACI,IAAG,CAAC,GAAG,YAAY,CAAC,OAAO,EAC3B;oBACI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;iBAChE;qBACD;oBACI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC;iBACjE;aACJ;SAEJ;IAEL,CAAC;IA3DD;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;2CACG;IAGvB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;8CACM;IAGxB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;mDACW;IATZ,SAAS;QAD7B,OAAO;OACa,SAAS,CAiE7B;IAAD,gBAAC;CAjED,AAiEC,CAjEsC,EAAE,CAAC,SAAS,GAiElD;kBAjEoB,SAAS","file":"","sourceRoot":"/","sourcesContent":["import DataManager from \"../../core/DataManager\";\r\nimport GameManager from \"../../core/GameManager\";\r\nimport LevelConfigData from \"../../configdata/LevelConfigData\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LevelIcon extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    icon: cc.Sprite = null;\r\n\r\n    @property(cc.Node)\r\n    uplevel: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    upelementArr: cc.Node[] = [];\r\n\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    start () {\r\n\r\n    }\r\n\r\n    public updatePlayerSkin()\r\n    {\r\n        var levelId = DataManager.instance.getLevelId(DataManager.instance.getPlayerData().star);\r\n        this.updateSkin(levelId);\r\n    }\r\n\r\n    public updateSkin(levelId:number,showup:boolean = true)\r\n    {\r\n\r\n        var leveCnfdatas:LevelConfigData = DataManager.instance.levelConfigDatas[levelId - 1];\r\n\r\n        var spriteFrame = GameManager.instance.levelImgs[leveCnfdatas.level - 1];\r\n        this.icon.spriteFrame = spriteFrame;\r\n        this.icon.node.width = spriteFrame.getRect().width;\r\n        this.icon.node.height = spriteFrame.getRect().height;\r\n\r\n        if(!showup)\r\n        {\r\n            this.uplevel.active = false;\r\n            return;\r\n        }\r\n\r\n        if(leveCnfdatas.uplevel == 0)\r\n        {\r\n            this.uplevel.active = false;\r\n        }else\r\n        {\r\n            this.uplevel.active = true;\r\n\r\n            for(var i = 0 ; i < this.upelementArr.length; i++)\r\n            {\r\n                if(i < leveCnfdatas.uplevel)\r\n                {\r\n                    this.upelementArr[i].getChildByName(\"upstate\").active = true;\r\n                }else\r\n                {\r\n                    this.upelementArr[i].getChildByName(\"upstate\").active = false;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n"]}