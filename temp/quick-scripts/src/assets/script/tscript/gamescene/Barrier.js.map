{"version":3,"sources":["assets\\script\\tscript\\gamescene\\Barrier.ts"],"names":[],"mappings":";;;;;AAAA,yCAAoC;AACpC,yCAAoC;AACpC,mDAA8C;AAE9C,oBAAoB;AACpB,kFAAkF;AAClF,yFAAyF;AACzF,mBAAmB;AACnB,4FAA4F;AAC5F,mGAAmG;AACnG,8BAA8B;AAC9B,4FAA4F;AAC5F,mGAAmG;AAE7F,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAyB,CAAC;AAE1C,IAAY,WAKX;AALD,WAAY,WAAW;IAEnB,iDAAM,CAAA;IACN,mDAAO,CAAA;IACP,uDAAS,CAAA;AACb,CAAC,EALW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAKtB;AAGD;IAAqC,2BAAY;IADjD;QAAA,qEAyCC;QArCU,UAAI,GAAe,WAAW,CAAC,MAAM,CAAC;QAE7C,wBAAwB;QAEd,eAAS,GAAa,IAAI,CAAC;;QAgCrC,iBAAiB;IACrB,CAAC;IA/BG,eAAe;IAER,uBAAK,GAAZ;QAEI,IAAI,CAAC,SAAS,GAAG,qBAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,YAAY,CAAC,mBAAS,CAAC,CAAC;QAExE,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;QAEtB,IAAG,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,OAAO,EACnC;YACI,SAAS;YACT,IAAI,SAAS,GAAW,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;YAEjD,IAAI,OAAO,GAAG,EAAE,CAAC,EAAE,CAAC,gBAAM,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,KAAK,GAAC,CAAC,EAAC,SAAS,CAAC,KAAK,GAAC,CAAC,CAAC,EAAC,gBAAM,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,GAAC,CAAC,EAAC,SAAS,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,CAAC;YAC7H,IAAI,MAAM,GAAG,EAAE,CAAC,EAAE,CAAC,gBAAM,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,KAAK,GAAC,CAAC,EAAC,SAAS,CAAC,KAAK,GAAC,CAAC,CAAC,EAAC,gBAAM,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,GAAC,CAAC,EAAC,SAAS,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,CAAC;YAE5H,IAAI,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;YACpC,IAAI,SAAS,GAAG,gBAAM,CAAC,KAAK,CAAC,GAAG,EAAC,GAAG,CAAC,GAAG,EAAE,CAAC;YAC3C,IAAI,SAAS,GAAG,GAAG,GAAG,SAAS,CAAC;YAGhC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YAC7B,kBAAkB;YAElB,IAAI,GAAG,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,SAAS,EAAC,MAAM,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,oBAAoB,EAAE,CAAC,EAAC,EAAE,CAAC,MAAM,CAAC,SAAS,EAAC,OAAO,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC;YACpJ,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC;SAC5C;IAEL,CAAC;IAlCD;QADC,QAAQ,CAAC,EAAC,IAAI,EAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,EAAC,CAAC;yCACO;IAH5B,OAAO;QAD3B,OAAO;OACa,OAAO,CAwC3B;IAAD,cAAC;CAxCD,AAwCC,CAxCoC,EAAE,CAAC,SAAS,GAwChD;kBAxCoB,OAAO","file":"","sourceRoot":"/","sourcesContent":["import Random from \"../util/Random\";\r\nimport GameScene from \"./GameScene\";\r\nimport GameManager from \"../core/GameManager\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nexport enum BarrierType\r\n{\r\n    static,\r\n    dynamic,\r\n    blackhole,\r\n}\r\n\r\n@ccclass\r\nexport default class Barrier extends cc.Component {\r\n\r\n    @property({type:cc.Enum(BarrierType)})\r\n    public type:BarrierType = BarrierType.static;\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    protected gameScene:GameScene = null;\r\n\r\n    // onLoad () {}\r\n\r\n    public start () {\r\n\r\n        this.gameScene = GameManager.instance.gameScene.getComponent(GameScene);\r\n\r\n        this.node.scale = 0.7;\r\n\r\n        if(this.type == BarrierType.dynamic)\r\n        {\r\n            //return;\r\n            var sceneSize:cc.Node = this.gameScene.sceneSize;\r\n\r\n            var starPos = cc.v2(Random.Range(-sceneSize.width/2,sceneSize.width/2),Random.Range(-sceneSize.height/2,sceneSize.height/2));\r\n            var endPos = cc.v2(Random.Range(-sceneSize.width/2,sceneSize.width/2),Random.Range(-sceneSize.height/2,sceneSize.height/2));\r\n\r\n            var dis = endPos.sub(starPos).mag();\r\n            var baseSpeed = Random.Range(0.5,2.5) * 60;\r\n            var baseTimer = dis / baseSpeed;\r\n\r\n\r\n            this.node.position = starPos;\r\n            //baseTimer = 2.5;\r\n\r\n            var seq = cc.sequence(cc.moveTo(baseTimer,endPos).easing(cc.easeCubicActionInOut()),cc.moveTo(baseTimer,starPos).easing(cc.easeCubicActionInOut()));\r\n            this.node.runAction(seq.repeatForever());\r\n        }\r\n\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n"]}