{"version":3,"sources":["assets\\script\\tscript\\gamescene\\BlackHole.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Barrier from \"./Barrier\";\r\nimport Random from \"../util/Random\";\r\nimport GameManager, { GameStatus } from \"../core/GameManager\";\r\nimport GameScene from \"./GameScene\";\r\nimport Player, { PlayerStatus } from \"./Player\";\r\nimport UIManager, { LayerType } from \"../ui/UIManager\";\r\nimport Knife, { KnifeStatus } from \"./Knife\";\r\nimport SoundManager from \"../core/SoundManager\";\r\nimport { SoundClipType } from \"../audio/SoundClip\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BlackHole extends Barrier {\r\n\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    @property(cc.Sprite)\r\n    public skin:cc.Sprite = null;\r\n\r\n    @property(cc.Node)\r\n    public body:cc.Node = null;\r\n\r\n    private cdTimer:number = 0;\r\n\r\n    private liveTimer:number = 5;\r\n\r\n    public appear:boolean = true;\r\n\r\n    public moveSpeed:number = 300;\r\n\r\n    public moveDir:cc.Vec2 = cc.Vec2.ZERO;\r\n\r\n    public endPos:cc.Vec2 = cc.Vec2.ZERO;\r\n\r\n    public eatCount:number = 0;\r\n\r\n    public knifecount:number = 0;\r\n\r\n    private circleCollider:cc.CircleCollider = null;\r\n\r\n    private physicsCircleCollider:cc.CircleCollider = null;\r\n\r\n    private _size: number = 1;\r\n\r\n    public get size(): number {\r\n        return this._size;\r\n    }\r\n    public set size(value: number) {\r\n        this._size = value;\r\n        this.skin.node.scale = this._size;\r\n\r\n        if(!this.circleCollider)\r\n        {\r\n            this.circleCollider = this.body.getComponent(cc.CircleCollider);\r\n        } \r\n\r\n        this.circleCollider.radius = 100 * this._size;\r\n\r\n\r\n        if(!this.physicsCircleCollider)\r\n        {\r\n            this.physicsCircleCollider = this.getComponent(cc.PhysicsCircleCollider);\r\n        } \r\n\r\n        this.physicsCircleCollider.radius = 100 * this._size;\r\n        \r\n\r\n        //this.physicsCircleCollider.radius = 350;\r\n        //cc.log(\"this.physicsCircleCollider.radius \",this.physicsCircleCollider.radius);\r\n\r\n    }\r\n\r\n\r\n    public start () {\r\n\r\n        var roAction = cc.rotateBy(1,360);\r\n        this.skin.node.runAction(roAction.repeatForever());\r\n        this.gameScene = GameManager.instance.gameScene.getComponent(GameScene);\r\n\r\n        var sceneSize:cc.Node = this.gameScene.sceneSize;\r\n        this.endPos = cc.v2(Random.Range(-sceneSize.width/2,sceneSize.width/2),Random.Range(-sceneSize.height/2,sceneSize.height/2));\r\n        this.moveDir = this.endPos.sub(this.node.position).normalize();\r\n\r\n        var mark = GameManager.instance.getMark();\r\n        mark.node.parent = UIManager.instance.getLayer(LayerType.back);\r\n        mark.player = this.gameScene.player;\r\n        mark.isPlayer = false;\r\n        mark.blackHole = this;\r\n\r\n        this.gameScene.blackHole = this;\r\n\r\n    }\r\n\r\n    update (dt) \r\n    {\r\n    \r\n\r\n        if(GameManager.instance.gameStatus != GameStatus.start)\r\n            return;\r\n        /*this.cdTimer -= dt;\r\n\r\n        if(this.cdTimer <= 0)\r\n        {\r\n            this.cdTimer = Random.Range(3.5,7);\r\n\r\n            this.endPos = this.getRandomPlayer().node.position;\r\n            this.moveDir = this.endPos.sub(this.node.position).normalize();\r\n        }*/\r\n        \r\n\r\n\r\n        var speed = this.moveSpeed * dt;\r\n\r\n        var pos = this.node.position.add(this.moveDir.mul(speed));\r\n        this.node.position = pos;\r\n\r\n        if(this.endPos.sub(this.node.position).mag() < speed)\r\n        {\r\n            this.endPos = this.getRandomPlayer().node.position;\r\n            this.moveDir = this.endPos.sub(this.node.position).normalize();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public getRandomPlayer()\r\n    {\r\n        var playerArr:Array<Player> = this.gameScene.playerArr;\r\n\r\n        var arr:Array<Player> = [];\r\n\r\n        for(var i = 0 ; i < playerArr.length ; i++)\r\n        {\r\n            if(playerArr[i].status != PlayerStatus.die)\r\n            {\r\n                arr.push(playerArr[i]);\r\n            }\r\n        }\r\n\r\n        if(arr.length == 0)\r\n        {\r\n            return this.gameScene.player;\r\n        }\r\n\r\n\r\n        return arr[Random.RangeInteger(0,arr.length)];\r\n\r\n    }\r\n\r\n    public eat(knife:Knife)\r\n    {\r\n        this.eatCount ++;\r\n        this.size = 1 + Math.floor(this.eatCount / 6) * 0.25;\r\n        this.knifecount ++;\r\n        SoundManager.instance.playAudioClip(SoundClipType.blackhole);\r\n    }\r\n\r\n     /*update (dt) \r\n     {\r\n\r\n        if(this.cdTimer > 0)\r\n        {\r\n            this.cdTimer -= dt;\r\n\r\n            if(this.cdTimer <= 0)\r\n            {\r\n                this.liveTimer = Random.Range(3.5,10);\r\n\r\n                var sceneSize:cc.Node = this.gameScene.sceneSize;\r\n                this.node.position = cc.v2(Random.Range(-(sceneSize.width - 300)/2,(sceneSize.width - 300)/2),Random.Range(-(sceneSize.height - 300)/2,(sceneSize.height - 300)/2));\r\n\r\n                var seq = cc.sequence(cc.fadeIn(2),cc.callFunc(()=>{\r\n                    this.appear = true;\r\n                },this));\r\n\r\n                this.node.runAction(seq);\r\n\r\n            }\r\n        }\r\n\r\n\r\n        if(this.liveTimer > 0)\r\n        {\r\n            this.liveTimer -= dt;\r\n\r\n            if(this.liveTimer <= 0)\r\n            {\r\n                \r\n                this.appear = false;\r\n                var seq = cc.sequence(cc.fadeOut(2),cc.callFunc(()=>{\r\n                    //this.appear = false;\r\n                },this));\r\n\r\n                this.node.runAction(seq);\r\n                this.cdTimer = Random.Range(13,20);\r\n\r\n            }\r\n        }\r\n\r\n     }*/\r\n}\r\n"]}